import java.io.*;
import java.net.*;
import java.util.StringTokenizer;

public class ServerThread extends Thread {
	private Socket clientSock = null;
	BufferedReader inStream = null;
	DataOutputStream outStream = null;
	String buffer = null;
	String fileRequested = null;
	final File WEB_ROOT = new File("./www");
	FileOutputStream fout = null;

	public ServerThread(Socket s, String buff, String file) {
		this.clientSock = s;
		this.buffer = buff;
		this.fileRequested = file;
	}

	public void run() {

		try {
			inStream = new BufferedReader(new InputStreamReader(clientSock.getInputStream()));
			//outStream = new DataOutputStream(clientSock.getOutputStream());;
		} catch (IOException e) {
			e.printStackTrace();
		}

		/* Read the data sent by the client */
		int fileLength = 0;
		File file = null;
		byte[] fileData = null;

		try {
			buffer = inStream.readLine();
		} catch (IOException e) {
			e.printStackTrace();
		}

		if(buffer != null) {	
			System.out.println("Read from client "+ clientSock.getInetAddress() + ":"+ clientSock.getPort() + " " + buffer);

			/* String Tokenizer to parse the argument */
			StringTokenizer parse = new StringTokenizer(buffer);
			String method = parse.nextToken().trim();
			fileRequested = parse.nextToken().trim();
			String httpVersion = parse.nextToken().trim();

			/* Append default file name to request */
			if (fileRequested.endsWith("/"))
				fileRequested += "index.html";
		
			file = new File(WEB_ROOT, fileRequested);
			fileLength = (int)file.length();

			/* If request is a GET, send the file content */
			if (method.equalsIgnoreCase("GET")) {
				System.out.println("Checking if GET");
				FileInputStream fileIn = null;

				/* Create byte array to store file data */
				fileData = new byte[fileLength];
				try {
					System.out.println("In Try");
					fileIn = new FileInputStream(file);
					fileIn.read(fileData);
					System.out.println("Size of fileData:"+fileData.length);	

					if (fileIn == null)
						System.err.println("No file read");
					fileIn.close();
				} catch (Exception e) {
					System.out.println(e);
				}
			}


			if(!httpVersion.equalsIgnoreCase("HTTP/1.1")) {
				//try {
					//outStream.writeBytes("ERROR: Wrong HTTP");
				//} catch (IOException e) {
			//		e.printStackTrace();
				//}
				System.out.println("HTTP version error");
				return;
			}

			/* If method is HEAD or GET send HTTP headers */													
			if(method.equalsIgnoreCase("GET") || method.equalsIgnoreCase("HEAD")) {
				try {
					outStream.writeBytes("HTTP/1.1 200 OK");
					outStream.writeBytes("Server: Java HTTP Server 1.0");
					outStream.writeBytes("Content-type: " + GetMime.getMimeType(fileRequested));
					outStream.writeBytes(" ");
					outStream.flush();
					
					/*if(method.equalsIgnoreCase("GET"))
						outStream.write(fileData, 0, fileLength-1);
					else
						outStream.writeBytes("501 Method Unimplemented");
					outStream.flush();

					/* Echo the data back and flush the stream to make sure that the data is sent immediately */
					//outStream.writeBytes(buffer);
					//outStream.flush();
					
					inStream.close();
					//outStream.close();
					clientSock.close();

				} catch (IOException e) {
					e.printStackTrace();
				}

			}
		}
	}
}
